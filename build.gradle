apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'org.dm.bundle'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'pmd'

apply from: "${rootDir}/gradle/object_layout.gradle"

group = 'com.github.ben-manes'
version = '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.6'
    classpath 'me.champeau.gradle:jmh-gradle-plugin:0.1.3'
    classpath 'org.dm.gradle:gradle-bundle-plugin:0.6.2'
  }
}

repositories {
  jcenter()
}

dependencies {
  def guava = '18.0'

  // compile time (annotations only)
  compile 'com.google.code.findbugs:jsr305:3.0.0'

  // unit testing
  testCompile 'com.jayway.awaitility:awaitility:1.6.3'
  testCompile 'org.mockito:mockito-core:1.10.16'
  testCompile "com.google.guava:guava:${guava}"
  testCompile dependencies.create("com.google.guava:guava-testlib:${guava}") {
    exclude group: 'junit'
  }
  testCompile dependencies.create('org.testng:testng:6.8.8') {
    exclude group: 'junit'
  }
  
  // benchmarking
  jmh 'com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.4'
  jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.3.4'
  jmh 'net.openhft:koloboke-api-jdk8:0.6.5'
  jmh 'net.openhft:koloboke-impl-jdk8:0.6.5'
  
  // Eclipse fails to include all of dependencies without this workaround
  testCompile configurations.jmh.allDependencies
}

test {
  useTestNG()
  options {
    threadCount = 4
    parallel = 'classes'
  }
}

findbugs {
  effort = "max"
  sourceSets = [sourceSets.main]
}

pmd {
  sourceSets = [sourceSets.main]
  ruleSets = [/* "java-basic", */ "java-braces"]
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

tasks.withType(Pmd) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = true
  }
}

tasks.coveralls {
  dependsOn 'check'
  onlyIf { System.env.'CI' }
}

bundle {
  instruction 'Import-Package', 'sun.misc.*;resolution:=optional'
  instruction 'Export-Package', 'com.github.benmanes.caffeine.*'
}

jmh {
  if (project.hasProperty('includePattern')) {
    include = project.includePattern
  }
  jvmArgs = '-XX:+UseG1GC -XX:+AlwaysPreTouch'
  warmupIterations = 10
  failOnError = true
  iterations = 10
  forceGC = true
  fork = 2
}
