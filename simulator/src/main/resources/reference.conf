####################################
#   Cache Simulator Config File    #
####################################

# This is the reference config file that contains all the default settings.
# Make your edits/overrides in your application.conf.

# See http://doc.akka.io/docs/akka/current/general/configuration.html
akka {
  loglevel = "WARNING"

  default-mailbox {
    mailbox-type = "akka.dispatch.BoundedMailbox"
    mailbox-capacity = 1000
  }
}

caffeine.simulator {
  # The maximum number of entries in the cache
  maximum-size = 500

  policies = [
    # Policies based on maintianing linked-list that cross-cutting the hash table
    "linked.Lru",
    "linked.Mru",
    "linked.Fifo",
    "linked.Clock",

    # Policies based on obtaining a random sampling from the hash table
    "sampling.Lru",
    "sampling.Mru",
    "sampling.Lfu",
    "sampling.Mfu",
    "sampling.Fifo",
    "sampling.Random",
  ]

  sampling {
    # The random sample size
    size = 3

    # guess: Chooses unique random indexes until the sample size is reached
    # shuffle: http://en.wikipedia.org/wiki/Fisherâ€“Yates_shuffle
    # reseroir: http://en.wikipedia.org/wiki/Reservoir_sampling
    strategy = "guess"
  }

  # "file": reads from a trace file
  # "synthetic": reads from a synthetic generator
  source = "synthetic"

  file {
    # the path to the trace file
    path = null

    # text or binary
    format = "text"
  }

  synthetic {
    # The number of events to generate
    events = 10000

    # See the supported distributions and their configurations below
    distribution = "scrambled-zipfian"

    # A sequence of unique integers starting from...
    counter.start = 1

    # A sequence based on an exponential distribution with a mean arrival rate of gamma
    exponential.mean = 1.0

    # A sequence resembling a hotspot distribution where x% of operations access y% of data items
    hotspot {
      # The lower bound of the distribution
      lower-bound = 1
      # The upper bound of the distribution
      upper-bound = 100
      # The percentage of the of the interval which comprises the hot set
      hotset-fraction = 0.5
      # The percentage of operations that access the hot set
      hot-opn-fraction = 0.5
    }

    # A sequence where some items are more popular than others, according to a
    # zipfian distribution
    zipfian {}

    # A zipfian sequence that scatters the "popular" items across the item space. Use if you don't
    # want the head of the distribution (the popular items) clustered together.
    scrambled-zipfian {}

    # A zipfian sequence with a popularity distribution of items, skewed to favor recent items
    # significantly more than older items
    skewed-zipfian-latest {}

    # A sequence that generated from the specified set uniformly randomly
    uniform {
      lower-bound = 1
      upper-bound = 100
    }
  }
}
